<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="30" passed="26" failed="4" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-06-25T16:48:18 IST" name="New SUite for testing parallel" finished-at="2021-06-25T16:50:47 IST" duration-ms="149228">
    <groups>
    </groups>
    <test started-at="2021-06-25T16:48:18 IST" name="TestOnChrome" finished-at="2021-06-25T16:49:36 IST" duration-ms="78328">
      <class name="Tests.TestScripts">
        <test-method is-config="true" signature="driver_Setup(java.lang.String)[pri:0, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:48:18 IST" name="driver_Setup" finished-at="2021-06-25T16:48:20 IST" duration-ms="1943" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- driver_Setup -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:48:20 IST" name="beforeMethod" finished-at="2021-06-25T16:48:20 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testfive()[pri:0, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:48:20 IST" name="testfive" finished-at="2021-06-25T16:48:20 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testfive -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:48:20 IST" name="afterMethod" finished-at="2021-06-25T16:48:20 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:48:20 IST" name="beforeMethod" finished-at="2021-06-25T16:48:20 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testfour()[pri:0, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:48:20 IST" name="testfour" finished-at="2021-06-25T16:48:20 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testfour -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:48:20 IST" name="afterMethod" finished-at="2021-06-25T16:48:20 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:48:20 IST" name="beforeMethod" finished-at="2021-06-25T16:48:20 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:48:20 IST" name="beforeMethod" finished-at="2021-06-25T16:48:20 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testone()[pri:0, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:48:20 IST" name="testone" finished-at="2021-06-25T16:48:20 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testone -->
        <test-method signature="testone()[pri:0, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:48:20 IST" name="testone" finished-at="2021-06-25T16:48:20 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testone -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:48:20 IST" name="beforeMethod" finished-at="2021-06-25T16:48:20 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testone()[pri:0, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:48:20 IST" name="testone" finished-at="2021-06-25T16:48:20 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testone -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:48:20 IST" name="afterMethod" finished-at="2021-06-25T16:48:20 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:48:20 IST" name="afterMethod" finished-at="2021-06-25T16:48:20 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:48:20 IST" name="afterMethod" finished-at="2021-06-25T16:48:20 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:48:20 IST" name="beforeMethod" finished-at="2021-06-25T16:48:20 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:48:20 IST" name="beforeMethod" finished-at="2021-06-25T16:48:20 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:48:20 IST" name="beforeMethod" finished-at="2021-06-25T16:48:20 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testone()[pri:0, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:48:20 IST" name="testone" finished-at="2021-06-25T16:48:20 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testone -->
        <test-method signature="testone()[pri:0, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:48:20 IST" name="testone" finished-at="2021-06-25T16:48:20 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testone -->
        <test-method signature="testone()[pri:0, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:48:20 IST" name="testone" finished-at="2021-06-25T16:48:20 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testone -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:48:20 IST" name="afterMethod" finished-at="2021-06-25T16:48:20 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:48:20 IST" name="afterMethod" finished-at="2021-06-25T16:48:20 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:48:20 IST" name="afterMethod" finished-at="2021-06-25T16:48:20 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:48:20 IST" name="beforeMethod" finished-at="2021-06-25T16:48:20 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testsix()[pri:0, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:48:20 IST" name="testsix" finished-at="2021-06-25T16:48:20 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsix -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:48:20 IST" name="beforeMethod" finished-at="2021-06-25T16:48:20 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:48:20 IST" name="afterMethod" finished-at="2021-06-25T16:48:20 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testthree()[pri:0, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:48:20 IST" name="testthree" finished-at="2021-06-25T16:48:20 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testthree -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:48:20 IST" name="afterMethod" finished-at="2021-06-25T16:48:20 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:48:20 IST" name="beforeMethod" finished-at="2021-06-25T16:48:20 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testwo()[pri:0, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:48:20 IST" name="testwo" finished-at="2021-06-25T16:48:20 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testwo -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:48:20 IST" name="afterMethod" finished-at="2021-06-25T16:48:20 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="Login(java.lang.String, java.lang.String)[pri:1, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:48:20 IST" name="Login" description="Login process with valid and invalid values" data-provider="Login_credential" finished-at="2021-06-25T16:48:32 IST" duration-ms="11443" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[demo@melbasiii.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234567890]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.fail(Assert.java:102)
at pom.loginPo.signIn(loginPo.java:64)
at Tests.TestScripts.Login(TestScripts.java:27)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:48:20 IST" name="beforeMethod" finished-at="2021-06-25T16:48:20 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:48:32 IST" name="afterMethod" finished-at="2021-06-25T16:48:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:48:32 IST" name="beforeMethod" finished-at="2021-06-25T16:48:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="Login(java.lang.String, java.lang.String)[pri:1, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:48:32 IST" name="Login" description="Login process with valid and invalid values" data-provider="Login_credential" finished-at="2021-06-25T16:49:08 IST" duration-ms="36194" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[demo@melbasi.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234567890]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:49:08 IST" name="afterMethod" finished-at="2021-06-25T16:49:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:49:08 IST" name="beforeMethod" finished-at="2021-06-25T16:49:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="Login(java.lang.String, java.lang.String)[pri:1, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:49:08 IST" name="Login" description="Login process with valid and invalid values" data-provider="Login_credential" finished-at="2021-06-25T16:49:14 IST" duration-ms="6104" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[shafeek@melbasi.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1233672627626]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.fail(Assert.java:102)
at pom.loginPo.signIn(loginPo.java:64)
at Tests.TestScripts.Login(TestScripts.java:27)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:49:14 IST" name="afterMethod" finished-at="2021-06-25T16:49:14 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:49:14 IST" name="beforeMethod" finished-at="2021-06-25T16:49:14 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="Login(java.lang.String, java.lang.String)[pri:1, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:49:14 IST" name="Login" description="Login process with valid and invalid values" data-provider="Login_credential" finished-at="2021-06-25T16:49:35 IST" duration-ms="21121" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[demo@melbasi.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234567890]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:49:35 IST" name="afterMethod" finished-at="2021-06-25T16:49:35 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:Tests.TestScripts@25bbf683]" started-at="2021-06-25T16:49:35 IST" name="teardown" finished-at="2021-06-25T16:49:36 IST" duration-ms="1070" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- Tests.TestScripts -->
    </test> <!-- TestOnChrome -->
    <test started-at="2021-06-25T16:49:36 IST" name="TestOnFirefox" finished-at="2021-06-25T16:50:47 IST" duration-ms="70899">
      <class name="Tests.TestScripts">
        <test-method is-config="true" signature="driver_Setup(java.lang.String)[pri:0, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:49:36 IST" name="driver_Setup" finished-at="2021-06-25T16:49:43 IST" duration-ms="6898" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- driver_Setup -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:49:43 IST" name="beforeMethod" finished-at="2021-06-25T16:49:43 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testfive()[pri:0, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:49:43 IST" name="testfive" finished-at="2021-06-25T16:49:43 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testfive -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:49:43 IST" name="afterMethod" finished-at="2021-06-25T16:49:43 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:49:43 IST" name="beforeMethod" finished-at="2021-06-25T16:49:43 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testfour()[pri:0, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:49:43 IST" name="testfour" finished-at="2021-06-25T16:49:43 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testfour -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:49:43 IST" name="afterMethod" finished-at="2021-06-25T16:49:43 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testone()[pri:0, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:49:43 IST" name="testone" finished-at="2021-06-25T16:49:43 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testone -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:49:43 IST" name="beforeMethod" finished-at="2021-06-25T16:49:43 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testone()[pri:0, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:49:43 IST" name="testone" finished-at="2021-06-25T16:49:43 IST" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testone -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:49:43 IST" name="beforeMethod" finished-at="2021-06-25T16:49:43 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:49:43 IST" name="beforeMethod" finished-at="2021-06-25T16:49:43 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testone()[pri:0, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:49:43 IST" name="testone" finished-at="2021-06-25T16:49:43 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testone -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:49:43 IST" name="afterMethod" finished-at="2021-06-25T16:49:43 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:49:43 IST" name="beforeMethod" finished-at="2021-06-25T16:49:43 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testone()[pri:0, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:49:43 IST" name="testone" finished-at="2021-06-25T16:49:43 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testone -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:49:43 IST" name="afterMethod" finished-at="2021-06-25T16:49:43 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:49:43 IST" name="afterMethod" finished-at="2021-06-25T16:49:43 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:49:43 IST" name="beforeMethod" finished-at="2021-06-25T16:49:43 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:49:43 IST" name="beforeMethod" finished-at="2021-06-25T16:49:43 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testone()[pri:0, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:49:43 IST" name="testone" finished-at="2021-06-25T16:49:43 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testone -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:49:43 IST" name="afterMethod" finished-at="2021-06-25T16:49:43 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testone()[pri:0, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:49:43 IST" name="testone" finished-at="2021-06-25T16:49:43 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testone -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:49:43 IST" name="afterMethod" finished-at="2021-06-25T16:49:43 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:49:43 IST" name="afterMethod" finished-at="2021-06-25T16:49:43 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:49:43 IST" name="afterMethod" finished-at="2021-06-25T16:49:43 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testsix()[pri:0, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:49:43 IST" name="testsix" finished-at="2021-06-25T16:49:43 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testsix -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:49:43 IST" name="beforeMethod" finished-at="2021-06-25T16:49:43 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:49:43 IST" name="afterMethod" finished-at="2021-06-25T16:49:43 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testthree()[pri:0, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:49:43 IST" name="testthree" finished-at="2021-06-25T16:49:43 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testthree -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:49:43 IST" name="beforeMethod" finished-at="2021-06-25T16:49:43 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:49:43 IST" name="afterMethod" finished-at="2021-06-25T16:49:43 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testwo()[pri:0, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:49:43 IST" name="testwo" finished-at="2021-06-25T16:49:43 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testwo -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:49:43 IST" name="beforeMethod" finished-at="2021-06-25T16:49:43 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:49:43 IST" name="beforeMethod" finished-at="2021-06-25T16:49:43 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="Login(java.lang.String, java.lang.String)[pri:1, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:49:43 IST" name="Login" description="Login process with valid and invalid values" data-provider="Login_credential" finished-at="2021-06-25T16:49:57 IST" duration-ms="13757" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[demo@melbasiii.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234567890]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.fail(Assert.java:102)
at pom.loginPo.signIn(loginPo.java:64)
at Tests.TestScripts.Login(TestScripts.java:27)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:49:57 IST" name="beforeMethod" finished-at="2021-06-25T16:49:57 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:49:57 IST" name="afterMethod" finished-at="2021-06-25T16:49:57 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="Login(java.lang.String, java.lang.String)[pri:1, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:49:57 IST" name="Login" description="Login process with valid and invalid values" data-provider="Login_credential" finished-at="2021-06-25T16:50:18 IST" duration-ms="20715" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[demo@melbasi.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234567890]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:50:18 IST" name="afterMethod" finished-at="2021-06-25T16:50:18 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:50:18 IST" name="beforeMethod" finished-at="2021-06-25T16:50:18 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="Login(java.lang.String, java.lang.String)[pri:1, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:50:18 IST" name="Login" description="Login process with valid and invalid values" data-provider="Login_credential" finished-at="2021-06-25T16:50:24 IST" duration-ms="6225" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[shafeek@melbasi.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1233672627626]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.fail(Assert.java:102)
at pom.loginPo.signIn(loginPo.java:64)
at Tests.TestScripts.Login(TestScripts.java:27)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:50:24 IST" name="afterMethod" finished-at="2021-06-25T16:50:24 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:50:24 IST" name="beforeMethod" finished-at="2021-06-25T16:50:24 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="Login(java.lang.String, java.lang.String)[pri:1, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:50:24 IST" name="Login" description="Login process with valid and invalid values" data-provider="Login_credential" finished-at="2021-06-25T16:50:45 IST" duration-ms="20702" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[demo@melbasi.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234567890]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:50:45 IST" name="afterMethod" finished-at="2021-06-25T16:50:45 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:Tests.TestScripts@646007f4]" started-at="2021-06-25T16:50:45 IST" name="teardown" finished-at="2021-06-25T16:50:47 IST" duration-ms="2541" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- Tests.TestScripts -->
    </test> <!-- TestOnFirefox -->
  </suite> <!-- New SUite for testing parallel -->
</testng-results>
